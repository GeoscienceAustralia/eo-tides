[project]
name = "eo-tides"
dynamic = ["version"]
description = "Tide modelling tools for large-scale satellite earth observation analysis"
authors = [
    { name = "Robbi Bishop-Taylor" },
    { name = "Stephen Sagar" },
    { name = "Claire Phillips" },
    { name = "Vanessa Newey" },
    { email = "Robbi.BishopTaylor@ga.gov.au"}
]
readme = "README.md"
keywords = [
    "earth observation",
    "tide modelling",
    "tide modeling",
    "satellite data",
    "coastal analysis",
    "oceanography",
    "remote sensing",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Oceanography",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Scientific/Engineering :: Image Processing",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.10,<4.0"
dependencies = [
    "colorama>=0.4.3",
    "dask[complete]>=2023.1.0",
    "geopandas>=0.10.0",
    "matplotlib>=3.8.0",
    "numpy>=1.26.0",
    "odc-geo>=0.4.7",
    "pandas>=2.2.0",
    "psutil>=5.8.0",
    "pyogrio>=0.10.0",
    "pyproj>=3.7.0",
    "pyTMD>=2.2.2,<2.2.5",
    "scikit-learn>=1.4.0",
    "scipy>=1.14.1",
    "shapely>=2.0.6",
    "timescale>=0.0.3",
    "tqdm>=4.55.0",
    "xarray>=2022.3.0",
]

[project.urls]
Homepage = "https://GeoscienceAustralia.github.io/eo-tides/"
Repository = "https://github.com/GeoscienceAustralia/eo-tides"
Documentation = "https://GeoscienceAustralia.github.io/eo-tides/"

[project.optional-dependencies]
notebooks = [
    "odc-stac>=0.3.10",
    "odc-geo[warp,tiff]>=0.4.7",
    "pystac-client>=0.8.3",
    "folium>=0.16.0",
    "planetary_computer>=1.0.0",
]

[dependency-groups]
dev = [
    "pytest>=6.0.0",
    "pre-commit>=0.2.0",
    "deptry>=0.20.0",
    "mypy>=0.900",
    "pytest-cov>=0.6",
    "ruff>=0.0.200",
    "mkdocs>=1.2",
    "mkdocs-material>=9.5.0",
    "mkdocs-jupyter>=0.24.0",
    "mkdocstrings[python]>=0.20.0",
    "black>=22.1.0",
    "nbval>=0.10.0",
    "odc-stac>=0.3.8",
    "pystac-client>=0.8.3",
    "planetary_computer>=1.0.0",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.mypy]
files = ["eo_tides"]
python_version = "3.10"
ignore_missing_imports = true
allow_redefinition = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py310"     # Target Python 3.10 syntax
line-length = 120            # Set max line length
fix = true                   # Allow auto-fix when used without pre-commit
lint.select = [
  "I",        # Import sorting
  "W",        # PyCodeStyle warnings
  "F",        # Pyflakes (unused vars, imports, etc.)
  "E",        # pycodestyle (spacing, etc.)
  "UP",       # Modern Python idioms
  "B006",     # Mutable default args
  "B007",     # Reusing loop variables
  "C4",       # Catch incorrect use of comprehensions, dict, list, etc
  "FA",       # Enforce from __future__ import annotations
  "ISC",      # Correct use of string concatenation
  "ICN",      # Common import conventions
  "RET",      # Good return practices
  "SIM",      # Common simplification rules
  "TID",      # Some good import practices
  "PTH",      # Use pathlib instead of os.path
  "NPY",      # Some numpy-specific things
]
lint.ignore = [
  "E501",     # Don't enforce line length
  "SIM105",   # contextlib.suppress
]
exclude = ["tests/testing.ipynb"]  # Don't modify testing notebook

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "S101",     # Allow `assert` in test files
  "NPY002"    # Allow legacy numpy random generation
]

[tool.ruff.format]
preview = true    # Enable experimental formatting improvements

[tool.deptry.per_rule_ignores]
DEP002 = [
    "folium",
    "pyogrio",
    "dask",
]

[tool.coverage.report]
skip_empty = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]

[tool.coverage.run]
branch = true
source = ["eo_tides"]
